/*
 * FastMul.s
 *
 * Функция для ускоренного умножения беззнакового и знакового 8-битных чисел, со смещением результата вправо на 8 бит.
 * 
 * Author: Погребняк Дмитрий, г. Самара, 2014
 *
 * Помещённый здесь код является свободным. Т.е. допускается его свободное использование для любых целей,
 * включая коммерческие, при условии указания ссылки на автора (Погребняк Дмитрий, http://aterlux.ru/).
 */ 

.global mul_s_u_shr8 // Ассемблерная функция должна быть объявлена global

// 78 тактов максимум
mul_s_u_shr8: 
// r24 - первый множитель (int8_t), r22 - второй множитель (uint8_t), результат (int8_t) в r24

   mov r21, r24
   clr r23 // r24:r23 - сумма 
   clr r24
   clr r20 //r21:r20 - второй параметр расширенный до 16 бит, сдвигаемый на каждом шаге вправо арифметически
   
  
   tst r22
   breq end // Если ноль, то сразу выходим
  cycle:
     brpl no_bit  // Если старший бит не установлен, то ничего не делаем
       // Иначе прибавляем к сумме наш аргумент
       asr r21
       ror r20
       add r23, r20
       adc r24, r21
       lsl r22
     brne cycle // Продолжаем пока не выталкаем все биты
     ret
    no_bit:
     asr r21
     ror r20
     lsl r22
   brne cycle // Продолжаем пока не выталкаем все биты
  end:
ret